<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jvbo.springboot.template.admin.core.mapper.AuthRoleMenuMapper">
  <resultMap id="BaseResultMap" type="com.jvbo.springboot.template.admin.core.model.AuthRoleMenu">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="menu_id" jdbcType="VARCHAR" property="menuId" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="gmt_created" jdbcType="BIGINT" property="gmtCreated" />
    <result column="modified_by" jdbcType="VARCHAR" property="modifiedBy" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmtModified" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_id, menu_id, created_by, gmt_created, modified_by, gmt_modified, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_role_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_role_menu
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from auth_role_menu
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenuExample">
    delete from auth_role_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenu">
    insert into auth_role_menu (id, role_id, menu_id, 
      created_by, gmt_created, modified_by, 
      gmt_modified, is_deleted)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{menuId,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=BIGINT}, #{modifiedBy,jdbcType=VARCHAR}, 
      #{gmtModified,jdbcType=BIGINT}, #{isDeleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenu">
    insert into auth_role_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=BIGINT},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenuExample" resultType="java.lang.Long">
    select count(*) from auth_role_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update auth_role_menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.menuId != null">
        menu_id = #{record.menuId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedBy != null">
        modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update auth_role_menu
    set id = #{record.id,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      menu_id = #{record.menuId,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=BIGINT},
      modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
      gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenu">
    update auth_role_menu
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=BIGINT},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jvbo.springboot.template.admin.core.model.AuthRoleMenu">
    update auth_role_menu
    set role_id = #{roleId,jdbcType=VARCHAR},
      menu_id = #{menuId,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=BIGINT},
      modified_by = #{modifiedBy,jdbcType=VARCHAR},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>