<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jvbo.springboot.practice.core.dao.UserMachineDao">
  <resultMap id="BaseResultMap" type="com.jvbo.springboot.practice.core.model.UserMachine">
    <id column="user_machine_id" jdbcType="BIGINT" property="user_machine_id" />
    <result column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="machine_id" jdbcType="BIGINT" property="machine_id" />
    <result column="machine_from" jdbcType="VARCHAR" property="machine_from" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="expire_time" jdbcType="BIGINT" property="expire_time" />
    <result column="machine_name" jdbcType="VARCHAR" property="machine_name" />
    <result column="machine_type" jdbcType="VARCHAR" property="machine_type" />
    <result column="unit_price" jdbcType="DECIMAL" property="unit_price" />
    <result column="per_amount" jdbcType="DECIMAL" property="per_amount" />
    <result column="total_amount" jdbcType="DECIMAL" property="total_amount" />
    <result column="cycle_of_operation" jdbcType="INTEGER" property="cycle_of_operation" />
    <result column="generate_of_time" jdbcType="INTEGER" property="generate_of_time" />
    <result column="generate_of_amount" jdbcType="DECIMAL" property="generate_of_amount" />
    <result column="limit_count" jdbcType="INTEGER" property="limit_count" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="created_by" jdbcType="VARCHAR" property="created_by" />
    <result column="gmt_created" jdbcType="BIGINT" property="gmt_created" />
    <result column="modified_by" jdbcType="VARCHAR" property="modified_by" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmt_modified" />
    <result column="is_deleted" jdbcType="TINYINT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_machine_id, user_id, machine_id, machine_from, `state`, expire_time, machine_name, 
    machine_type, unit_price, per_amount, total_amount, cycle_of_operation, generate_of_time, 
    generate_of_amount, limit_count, sort, created_by, gmt_created, modified_by, gmt_modified, 
    is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.jvbo.springboot.practice.core.model.UserMachineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_machine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_machine
    where user_machine_id = #{user_machine_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_machine
    where user_machine_id = #{user_machine_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jvbo.springboot.practice.core.model.UserMachineExample">
    delete from t_user_machine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jvbo.springboot.practice.core.model.UserMachine">
    insert into t_user_machine (user_machine_id, user_id, machine_id, 
      machine_from, `state`, expire_time, 
      machine_name, machine_type, unit_price, 
      per_amount, total_amount, cycle_of_operation, 
      generate_of_time, generate_of_amount, limit_count, 
      sort, created_by, gmt_created, 
      modified_by, gmt_modified, is_deleted
      )
    values (#{user_machine_id,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT}, #{machine_id,jdbcType=BIGINT}, 
      #{machine_from,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{expire_time,jdbcType=BIGINT}, 
      #{machine_name,jdbcType=VARCHAR}, #{machine_type,jdbcType=VARCHAR}, #{unit_price,jdbcType=DECIMAL}, 
      #{per_amount,jdbcType=DECIMAL}, #{total_amount,jdbcType=DECIMAL}, #{cycle_of_operation,jdbcType=INTEGER}, 
      #{generate_of_time,jdbcType=INTEGER}, #{generate_of_amount,jdbcType=DECIMAL}, #{limit_count,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{created_by,jdbcType=VARCHAR}, #{gmt_created,jdbcType=BIGINT}, 
      #{modified_by,jdbcType=VARCHAR}, #{gmt_modified,jdbcType=BIGINT}, #{is_deleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jvbo.springboot.practice.core.model.UserMachine">
    insert into t_user_machine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_machine_id != null">
        user_machine_id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="machine_id != null">
        machine_id,
      </if>
      <if test="machine_from != null">
        machine_from,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="expire_time != null">
        expire_time,
      </if>
      <if test="machine_name != null">
        machine_name,
      </if>
      <if test="machine_type != null">
        machine_type,
      </if>
      <if test="unit_price != null">
        unit_price,
      </if>
      <if test="per_amount != null">
        per_amount,
      </if>
      <if test="total_amount != null">
        total_amount,
      </if>
      <if test="cycle_of_operation != null">
        cycle_of_operation,
      </if>
      <if test="generate_of_time != null">
        generate_of_time,
      </if>
      <if test="generate_of_amount != null">
        generate_of_amount,
      </if>
      <if test="limit_count != null">
        limit_count,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="created_by != null">
        created_by,
      </if>
      <if test="gmt_created != null">
        gmt_created,
      </if>
      <if test="modified_by != null">
        modified_by,
      </if>
      <if test="gmt_modified != null">
        gmt_modified,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_machine_id != null">
        #{user_machine_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="machine_id != null">
        #{machine_id,jdbcType=BIGINT},
      </if>
      <if test="machine_from != null">
        #{machine_from,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="expire_time != null">
        #{expire_time,jdbcType=BIGINT},
      </if>
      <if test="machine_name != null">
        #{machine_name,jdbcType=VARCHAR},
      </if>
      <if test="machine_type != null">
        #{machine_type,jdbcType=VARCHAR},
      </if>
      <if test="unit_price != null">
        #{unit_price,jdbcType=DECIMAL},
      </if>
      <if test="per_amount != null">
        #{per_amount,jdbcType=DECIMAL},
      </if>
      <if test="total_amount != null">
        #{total_amount,jdbcType=DECIMAL},
      </if>
      <if test="cycle_of_operation != null">
        #{cycle_of_operation,jdbcType=INTEGER},
      </if>
      <if test="generate_of_time != null">
        #{generate_of_time,jdbcType=INTEGER},
      </if>
      <if test="generate_of_amount != null">
        #{generate_of_amount,jdbcType=DECIMAL},
      </if>
      <if test="limit_count != null">
        #{limit_count,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="created_by != null">
        #{created_by,jdbcType=VARCHAR},
      </if>
      <if test="gmt_created != null">
        #{gmt_created,jdbcType=BIGINT},
      </if>
      <if test="modified_by != null">
        #{modified_by,jdbcType=VARCHAR},
      </if>
      <if test="gmt_modified != null">
        #{gmt_modified,jdbcType=BIGINT},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jvbo.springboot.practice.core.model.UserMachineExample" resultType="java.lang.Long">
    select count(*) from t_user_machine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user_machine
    <set>
      <if test="record.user_machine_id != null">
        user_machine_id = #{record.user_machine_id,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=BIGINT},
      </if>
      <if test="record.machine_id != null">
        machine_id = #{record.machine_id,jdbcType=BIGINT},
      </if>
      <if test="record.machine_from != null">
        machine_from = #{record.machine_from,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.expire_time != null">
        expire_time = #{record.expire_time,jdbcType=BIGINT},
      </if>
      <if test="record.machine_name != null">
        machine_name = #{record.machine_name,jdbcType=VARCHAR},
      </if>
      <if test="record.machine_type != null">
        machine_type = #{record.machine_type,jdbcType=VARCHAR},
      </if>
      <if test="record.unit_price != null">
        unit_price = #{record.unit_price,jdbcType=DECIMAL},
      </if>
      <if test="record.per_amount != null">
        per_amount = #{record.per_amount,jdbcType=DECIMAL},
      </if>
      <if test="record.total_amount != null">
        total_amount = #{record.total_amount,jdbcType=DECIMAL},
      </if>
      <if test="record.cycle_of_operation != null">
        cycle_of_operation = #{record.cycle_of_operation,jdbcType=INTEGER},
      </if>
      <if test="record.generate_of_time != null">
        generate_of_time = #{record.generate_of_time,jdbcType=INTEGER},
      </if>
      <if test="record.generate_of_amount != null">
        generate_of_amount = #{record.generate_of_amount,jdbcType=DECIMAL},
      </if>
      <if test="record.limit_count != null">
        limit_count = #{record.limit_count,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.created_by != null">
        created_by = #{record.created_by,jdbcType=VARCHAR},
      </if>
      <if test="record.gmt_created != null">
        gmt_created = #{record.gmt_created,jdbcType=BIGINT},
      </if>
      <if test="record.modified_by != null">
        modified_by = #{record.modified_by,jdbcType=VARCHAR},
      </if>
      <if test="record.gmt_modified != null">
        gmt_modified = #{record.gmt_modified,jdbcType=BIGINT},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user_machine
    set user_machine_id = #{record.user_machine_id,jdbcType=BIGINT},
      user_id = #{record.user_id,jdbcType=BIGINT},
      machine_id = #{record.machine_id,jdbcType=BIGINT},
      machine_from = #{record.machine_from,jdbcType=VARCHAR},
      `state` = #{record.state,jdbcType=VARCHAR},
      expire_time = #{record.expire_time,jdbcType=BIGINT},
      machine_name = #{record.machine_name,jdbcType=VARCHAR},
      machine_type = #{record.machine_type,jdbcType=VARCHAR},
      unit_price = #{record.unit_price,jdbcType=DECIMAL},
      per_amount = #{record.per_amount,jdbcType=DECIMAL},
      total_amount = #{record.total_amount,jdbcType=DECIMAL},
      cycle_of_operation = #{record.cycle_of_operation,jdbcType=INTEGER},
      generate_of_time = #{record.generate_of_time,jdbcType=INTEGER},
      generate_of_amount = #{record.generate_of_amount,jdbcType=DECIMAL},
      limit_count = #{record.limit_count,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      created_by = #{record.created_by,jdbcType=VARCHAR},
      gmt_created = #{record.gmt_created,jdbcType=BIGINT},
      modified_by = #{record.modified_by,jdbcType=VARCHAR},
      gmt_modified = #{record.gmt_modified,jdbcType=BIGINT},
      is_deleted = #{record.is_deleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jvbo.springboot.practice.core.model.UserMachine">
    update t_user_machine
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="machine_id != null">
        machine_id = #{machine_id,jdbcType=BIGINT},
      </if>
      <if test="machine_from != null">
        machine_from = #{machine_from,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="expire_time != null">
        expire_time = #{expire_time,jdbcType=BIGINT},
      </if>
      <if test="machine_name != null">
        machine_name = #{machine_name,jdbcType=VARCHAR},
      </if>
      <if test="machine_type != null">
        machine_type = #{machine_type,jdbcType=VARCHAR},
      </if>
      <if test="unit_price != null">
        unit_price = #{unit_price,jdbcType=DECIMAL},
      </if>
      <if test="per_amount != null">
        per_amount = #{per_amount,jdbcType=DECIMAL},
      </if>
      <if test="total_amount != null">
        total_amount = #{total_amount,jdbcType=DECIMAL},
      </if>
      <if test="cycle_of_operation != null">
        cycle_of_operation = #{cycle_of_operation,jdbcType=INTEGER},
      </if>
      <if test="generate_of_time != null">
        generate_of_time = #{generate_of_time,jdbcType=INTEGER},
      </if>
      <if test="generate_of_amount != null">
        generate_of_amount = #{generate_of_amount,jdbcType=DECIMAL},
      </if>
      <if test="limit_count != null">
        limit_count = #{limit_count,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="created_by != null">
        created_by = #{created_by,jdbcType=VARCHAR},
      </if>
      <if test="gmt_created != null">
        gmt_created = #{gmt_created,jdbcType=BIGINT},
      </if>
      <if test="modified_by != null">
        modified_by = #{modified_by,jdbcType=VARCHAR},
      </if>
      <if test="gmt_modified != null">
        gmt_modified = #{gmt_modified,jdbcType=BIGINT},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=TINYINT},
      </if>
    </set>
    where user_machine_id = #{user_machine_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jvbo.springboot.practice.core.model.UserMachine">
    update t_user_machine
    set user_id = #{user_id,jdbcType=BIGINT},
      machine_id = #{machine_id,jdbcType=BIGINT},
      machine_from = #{machine_from,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      expire_time = #{expire_time,jdbcType=BIGINT},
      machine_name = #{machine_name,jdbcType=VARCHAR},
      machine_type = #{machine_type,jdbcType=VARCHAR},
      unit_price = #{unit_price,jdbcType=DECIMAL},
      per_amount = #{per_amount,jdbcType=DECIMAL},
      total_amount = #{total_amount,jdbcType=DECIMAL},
      cycle_of_operation = #{cycle_of_operation,jdbcType=INTEGER},
      generate_of_time = #{generate_of_time,jdbcType=INTEGER},
      generate_of_amount = #{generate_of_amount,jdbcType=DECIMAL},
      limit_count = #{limit_count,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      created_by = #{created_by,jdbcType=VARCHAR},
      gmt_created = #{gmt_created,jdbcType=BIGINT},
      modified_by = #{modified_by,jdbcType=VARCHAR},
      gmt_modified = #{gmt_modified,jdbcType=BIGINT},
      is_deleted = #{is_deleted,jdbcType=TINYINT}
    where user_machine_id = #{user_machine_id,jdbcType=BIGINT}
  </update>
</mapper>