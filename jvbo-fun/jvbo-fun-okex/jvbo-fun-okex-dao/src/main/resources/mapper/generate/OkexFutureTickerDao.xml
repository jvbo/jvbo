<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.jvbo.fun.okex.dao.dao.OkexFutureTickerDao">
  <resultMap id="BaseResultMap" type="site.jvbo.fun.okex.dao.model.OkexFutureTicker">
    <id column="future_ticker_id" jdbcType="BIGINT" property="futureTickerId" />
    <result column="channel_id" jdbcType="BIGINT" property="channelId" />
    <result column="high" jdbcType="DECIMAL" property="high" />
    <result column="limit_low" jdbcType="DECIMAL" property="limitLow" />
    <result column="vol" jdbcType="DECIMAL" property="vol" />
    <result column="last" jdbcType="DECIMAL" property="last" />
    <result column="low" jdbcType="DECIMAL" property="low" />
    <result column="buy" jdbcType="DECIMAL" property="buy" />
    <result column="hold_amount" jdbcType="DECIMAL" property="holdAmount" />
    <result column="sell" jdbcType="DECIMAL" property="sell" />
    <result column="contract_id" jdbcType="BIGINT" property="contractId" />
    <result column="unit_amount" jdbcType="DECIMAL" property="unitAmount" />
    <result column="limit_high" jdbcType="DECIMAL" property="limitHigh" />
    <result column="gmt_create" jdbcType="BIGINT" property="gmtCreate" />
    <result column="timestamp" jdbcType="BIGINT" property="timestamp" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmtModified" />
    <result column="modified_by" jdbcType="BIGINT" property="modifiedBy" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    future_ticker_id, channel_id, high, limit_low, vol, `last`, low, buy, hold_amount, 
    sell, contract_id, unit_amount, limit_high, gmt_create, `timestamp`, create_by, gmt_modified, 
    modified_by, is_deleted
  </sql>
  <select id="selectByExample" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTickerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from okex_future_ticker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from okex_future_ticker
    where future_ticker_id = #{futureTickerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from okex_future_ticker
    where future_ticker_id = #{futureTickerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTickerExample">
    delete from okex_future_ticker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTicker">
    <selectKey keyProperty="futureTickerId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into okex_future_ticker (channel_id, high, limit_low, 
      vol, `last`, low, buy, 
      hold_amount, sell, contract_id, 
      unit_amount, limit_high, gmt_create, 
      `timestamp`, create_by, gmt_modified, 
      modified_by, is_deleted)
    values (#{channelId,jdbcType=BIGINT}, #{high,jdbcType=DECIMAL}, #{limitLow,jdbcType=DECIMAL}, 
      #{vol,jdbcType=DECIMAL}, #{last,jdbcType=DECIMAL}, #{low,jdbcType=DECIMAL}, #{buy,jdbcType=DECIMAL}, 
      #{holdAmount,jdbcType=DECIMAL}, #{sell,jdbcType=DECIMAL}, #{contractId,jdbcType=BIGINT}, 
      #{unitAmount,jdbcType=DECIMAL}, #{limitHigh,jdbcType=DECIMAL}, #{gmtCreate,jdbcType=BIGINT}, 
      #{timestamp,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{gmtModified,jdbcType=BIGINT}, 
      #{modifiedBy,jdbcType=BIGINT}, #{isDeleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTicker">
    <selectKey keyProperty="futureTickerId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into okex_future_ticker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="high != null">
        high,
      </if>
      <if test="limitLow != null">
        limit_low,
      </if>
      <if test="vol != null">
        vol,
      </if>
      <if test="last != null">
        `last`,
      </if>
      <if test="low != null">
        low,
      </if>
      <if test="buy != null">
        buy,
      </if>
      <if test="holdAmount != null">
        hold_amount,
      </if>
      <if test="sell != null">
        sell,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="unitAmount != null">
        unit_amount,
      </if>
      <if test="limitHigh != null">
        limit_high,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="timestamp != null">
        `timestamp`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelId != null">
        #{channelId,jdbcType=BIGINT},
      </if>
      <if test="high != null">
        #{high,jdbcType=DECIMAL},
      </if>
      <if test="limitLow != null">
        #{limitLow,jdbcType=DECIMAL},
      </if>
      <if test="vol != null">
        #{vol,jdbcType=DECIMAL},
      </if>
      <if test="last != null">
        #{last,jdbcType=DECIMAL},
      </if>
      <if test="low != null">
        #{low,jdbcType=DECIMAL},
      </if>
      <if test="buy != null">
        #{buy,jdbcType=DECIMAL},
      </if>
      <if test="holdAmount != null">
        #{holdAmount,jdbcType=DECIMAL},
      </if>
      <if test="sell != null">
        #{sell,jdbcType=DECIMAL},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="unitAmount != null">
        #{unitAmount,jdbcType=DECIMAL},
      </if>
      <if test="limitHigh != null">
        #{limitHigh,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTickerExample" resultType="java.lang.Long">
    select count(*) from okex_future_ticker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update okex_future_ticker
    <set>
      <if test="record.futureTickerId != null">
        future_ticker_id = #{record.futureTickerId,jdbcType=BIGINT},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=BIGINT},
      </if>
      <if test="record.high != null">
        high = #{record.high,jdbcType=DECIMAL},
      </if>
      <if test="record.limitLow != null">
        limit_low = #{record.limitLow,jdbcType=DECIMAL},
      </if>
      <if test="record.vol != null">
        vol = #{record.vol,jdbcType=DECIMAL},
      </if>
      <if test="record.last != null">
        `last` = #{record.last,jdbcType=DECIMAL},
      </if>
      <if test="record.low != null">
        low = #{record.low,jdbcType=DECIMAL},
      </if>
      <if test="record.buy != null">
        buy = #{record.buy,jdbcType=DECIMAL},
      </if>
      <if test="record.holdAmount != null">
        hold_amount = #{record.holdAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.sell != null">
        sell = #{record.sell,jdbcType=DECIMAL},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=BIGINT},
      </if>
      <if test="record.unitAmount != null">
        unit_amount = #{record.unitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.limitHigh != null">
        limit_high = #{record.limitHigh,jdbcType=DECIMAL},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="record.timestamp != null">
        `timestamp` = #{record.timestamp,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedBy != null">
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update okex_future_ticker
    set future_ticker_id = #{record.futureTickerId,jdbcType=BIGINT},
      channel_id = #{record.channelId,jdbcType=BIGINT},
      high = #{record.high,jdbcType=DECIMAL},
      limit_low = #{record.limitLow,jdbcType=DECIMAL},
      vol = #{record.vol,jdbcType=DECIMAL},
      `last` = #{record.last,jdbcType=DECIMAL},
      low = #{record.low,jdbcType=DECIMAL},
      buy = #{record.buy,jdbcType=DECIMAL},
      hold_amount = #{record.holdAmount,jdbcType=DECIMAL},
      sell = #{record.sell,jdbcType=DECIMAL},
      contract_id = #{record.contractId,jdbcType=BIGINT},
      unit_amount = #{record.unitAmount,jdbcType=DECIMAL},
      limit_high = #{record.limitHigh,jdbcType=DECIMAL},
      gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      `timestamp` = #{record.timestamp,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=BIGINT},
      gmt_modified = #{record.gmtModified,jdbcType=BIGINT},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTicker">
    update okex_future_ticker
    <set>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=BIGINT},
      </if>
      <if test="high != null">
        high = #{high,jdbcType=DECIMAL},
      </if>
      <if test="limitLow != null">
        limit_low = #{limitLow,jdbcType=DECIMAL},
      </if>
      <if test="vol != null">
        vol = #{vol,jdbcType=DECIMAL},
      </if>
      <if test="last != null">
        `last` = #{last,jdbcType=DECIMAL},
      </if>
      <if test="low != null">
        low = #{low,jdbcType=DECIMAL},
      </if>
      <if test="buy != null">
        buy = #{buy,jdbcType=DECIMAL},
      </if>
      <if test="holdAmount != null">
        hold_amount = #{holdAmount,jdbcType=DECIMAL},
      </if>
      <if test="sell != null">
        sell = #{sell,jdbcType=DECIMAL},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="unitAmount != null">
        unit_amount = #{unitAmount,jdbcType=DECIMAL},
      </if>
      <if test="limitHigh != null">
        limit_high = #{limitHigh,jdbcType=DECIMAL},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="timestamp != null">
        `timestamp` = #{timestamp,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where future_ticker_id = #{futureTickerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="site.jvbo.fun.okex.dao.model.OkexFutureTicker">
    update okex_future_ticker
    set channel_id = #{channelId,jdbcType=BIGINT},
      high = #{high,jdbcType=DECIMAL},
      limit_low = #{limitLow,jdbcType=DECIMAL},
      vol = #{vol,jdbcType=DECIMAL},
      `last` = #{last,jdbcType=DECIMAL},
      low = #{low,jdbcType=DECIMAL},
      buy = #{buy,jdbcType=DECIMAL},
      hold_amount = #{holdAmount,jdbcType=DECIMAL},
      sell = #{sell,jdbcType=DECIMAL},
      contract_id = #{contractId,jdbcType=BIGINT},
      unit_amount = #{unitAmount,jdbcType=DECIMAL},
      limit_high = #{limitHigh,jdbcType=DECIMAL},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      `timestamp` = #{timestamp,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where future_ticker_id = #{futureTickerId,jdbcType=BIGINT}
  </update>
</mapper>